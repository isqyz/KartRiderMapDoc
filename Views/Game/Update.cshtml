@model dynamic
@using System.Text.Json
@using System.Collections.Generic

@{
    ViewBag.Title = "玩家成绩管理";
    var Tracks = Model.tracks;
    Player player = Model.player;
    TrackScoreMark mark = Model.mark;
    var playerList = (IEnumerable<dynamic>)Model.players;
    var playerNamesJson = JsonSerializer.Serialize(
        playerList.Select(p => (string)p.PlayerName)
    );
}

<style>
    body {
        font-family: "Segoe UI", sans-serif;
        padding: 20px;
    }

    h2 {
        color: #333;
        margin-bottom: 20px;
    }

    form {
        max-width: 500px;
        background-color: #fdfdfd;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

    form > div {
        margin-bottom: 15px;
        position: relative;
    }

    label {
        display: block;
        font-weight: 600;
        margin-bottom: 5px;
    }

    input[type="text"],
    input[list],
    select {
        width: 100%;
        padding: 8px 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 14px;
        box-sizing: border-box;
    }

    button {
        padding: 8px 16px;
        background-color: #007acc;
        color: white;
        font-size: 14px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    button:hover {
        background-color: #005fa3;
    }

    .autocomplete-list {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        border: 1px solid #ccc;
        background-color: #fff;
        z-index: 9999;
        max-height: 200px;
        overflow-y: auto;
        display: none;
    }

    .autocomplete-suggestion {
        padding: 8px;
        cursor: pointer;
    }

        .autocomplete-suggestion:hover {
            background-color: #eee;
        }
</style>

<h2>输入或更新玩家成绩</h2>

<form method="post" action="/Game/AddOrUpdate">
    <div>
        <label for="playerName">玩家名:</label>
        <input type="text" id="playerName" name="playerName" autocomplete="off" required />
        <div id="suggestions" class="autocomplete-list"></div>
    </div>

    <div>
        <label for="trackId">赛道名:</label>
        <select id="trackId" name="trackId">
            @foreach (var t in Tracks)
            {
                @if (t.TrackName == "1")
                {
                    <option value="@t.Id" selected>@t</option>
                }
                else
                {
                    <option value="@t.Id">@t.TrackName</option>
                }
            }
        </select>
    </div>

    <div>
        <label for="score">成绩:</label>
        <input type="text" id="score" name="score" placeholder="mm:ss:SSS" maxlength="8" required />
    </div>

    <button type="submit">保存</button>
</form>

<script>
    // 成绩输入格式化
    document.getElementById('score').addEventListener('input', function (event) {
        let value = event.target.value.replace(/[^0-9]/g, '');
        if (value.length <= 0) {
            value = value;
        } else if (value.length <= 2) {
            value = value.substring(0, 1) + ':' + value.substring(1);
        } else if (value.length <= 7) {
            value = value.substring(0, 1) + ':' + value.substring(1, 3) + ':' + value.substring(3);
        } else {
            value = value.substring(0, 7);
        }
        event.target.value = value;
    });

    // 自动补全
    const players = @Html.Raw(playerNamesJson);
    const input = document.getElementById('playerName');
    const suggestionBox = document.getElementById('suggestions');

    input.addEventListener('input', function () {
        const value = this.value.toLowerCase().trim();
        suggestionBox.innerHTML = '';

        if (!value) {
            suggestionBox.style.display = 'none';
            return;
        }

        const filtered = players.filter(name => name.toLowerCase().includes(value)).slice(0, 10);

        if (filtered.length > 0) {
            filtered.forEach(name => {
                const div = document.createElement('div');
                div.textContent = name;
                div.classList.add('autocomplete-suggestion');
                div.onclick = () => {
                    input.value = name;
                    suggestionBox.innerHTML = '';
                    suggestionBox.style.display = 'none';
                };
                suggestionBox.appendChild(div);
            });
            suggestionBox.style.display = 'block';
        } else {
            suggestionBox.style.display = 'none';
        }
    });

    document.addEventListener('click', function (e) {
        if (!e.target.closest('#playerName') && !e.target.closest('#suggestions')) {
            suggestionBox.innerHTML = '';
            suggestionBox.style.display = 'none';
        }
    });
</script>
